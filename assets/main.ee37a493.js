var _=Object.defineProperty;var g=Object.getOwnPropertySymbols;var w=Object.prototype.hasOwnProperty,H=Object.prototype.propertyIsEnumerable;var v=(o,a,s)=>a in o?_(o,a,{enumerable:!0,configurable:!0,writable:!0,value:s}):o[a]=s,f=(o,a)=>{for(var s in a||(a={}))w.call(a,s)&&v(o,s,a[s]);if(g)for(var s of g(a))H.call(a,s)&&v(o,s,a[s]);return o};var c=(o,a,s)=>(v(o,typeof a!="symbol"?a+"":a,s),s);import{g as y,P as V,B as b,G,_ as $,a as k,b as B,c as C,d as L}from"./GamepadDiscover.89410682.js";import{g as T,n as D,i as P}from"./app.3abd9e50.js";import{_ as M}from"./plugin-vue_export-helper.5a098b48.js";function O(o,a){return class{constructor(){c(this,"app",o);c(this,"options",a);c(this,"holding");c(this,"events");c(this,"playerEvents");c(this,"playerHolding");c(this,"animationFrame");window.addEventListener("gamepadconnected",this.gamepadHandler.bind(this,!0)),window.addEventListener("gamepaddisconnected",this.gamepadHandler.bind(this,!1)),this.playerEvents={},this.playerHolding={},this.animationFrame=requestAnimationFrame(this.run.bind(this))}gamepadHandler(t,n){t?this.app.config.globalProperties.$isGamepadConnected=n:y().length===0&&(this.app.config.globalProperties.$isGamepadConnected=n)}run(){window.dispatchEvent(new CustomEvent("gamepadinput")),this.gamepadButtonHandler(),this.animationFrame=requestAnimationFrame(this.run.bind(this))}gamepadButtonHandler(){y().forEach((t,n)=>{const r=`player-${n+1}`;t.buttons.forEach((e,l)=>{if(!this.playerEvents[r])return;const d=a.buttonMapping[l];if(e.pressed){const i=this.playerEvents[r].pressed[d]||[];if(i.length===0)return;const p=i[i.length-1],u=Date.now();this.playerHolding[r]||(this.playerHolding[r]={});const h=typeof this.playerHolding[r][d]=="undefined";(h||p.repeat&&u-this.playerHolding[r][d]>=a.repeatTimeout)&&(this.playerHolding[r][d]=u,h&&(this.playerHolding[r][d]+=Number(a.initialTimeout)-Number(a.repeatTimeout)),p.callback.call(this,t))}else if(!e.pressed&&this.playerHolding[r]&&typeof this.playerHolding[r][d]!="undefined"){if(delete this.playerHolding[r][d],!this.playerEvents[r].released)return;const i=this.playerEvents[r].released[d];i.length>0&&i[i.length-1].callback.call(this,t)}})})}isValidBinding(t){return typeof t.arg!="undefined"&&(typeof t.value=="function"||typeof t.value=="undefined"&&typeof t.expression=="undefined")}isValidPlayerEvent(t){return V.indexOf(t)>-1}addListener(t,n,r,e=null){const l=n.released?"released":"pressed",d=!!n.repeat,i=b.filter(p=>Object.keys(n).indexOf(p)>-1);if(this.isValidPlayerEvent(t)){this.playerEvents[t]||(this.playerEvents[t]={}),this.playerEvents[t][l]||(this.playerEvents[t][l]={});for(let p=0;p<i.length;p++){const u=i[p];Array.isArray(this.playerEvents[t][l][u])||(this.playerEvents[t][l][u]=[]),this.playerEvents[t][l][u].push({vnode:e,repeat:d,callback:r})}}}removeListener(t,n,r){n.released,console.log(n)}}}const j={name:"GamepadResolver",props:{gamepad:{type:Object}},data(){return{gamepadData:Object}},mounted(){}};function x(o,a,s,t,n,r){return T(o.$slots,"default",D(P(s.gamepad)))}var E=M(j,[["render",x]]);const m={threshold:.5,buttonMapping:b,repeatTimeout:200,initialTimeout:200,controllerVibration:!0,mobileVibration:!1};var A={install(o,a={}){if(Number(o.version.split(".")[0])<3&&console.warn("This plugin requires Vue 3"),!("getGamepads"in navigator)){console.error("vue-use-gamepad: your browser does not support the Gamepad API!");return}const t=O(o,f(f({},m),a)),n=new t;o.config.globalProperties.$gamepad=n,o.component(G.name,G),o.component(E.name,E),o.directive("gamepad",{beforeMount:(r,e,l,d)=>{if(console.log(e),n.isValidBinding(e)){const i=typeof e.value!="undefined"?e.value:l.props.onClick;n.addListener(e.arg,e.modifiers,i,l)}else console.error(`invalid binding. '${e.arg}' was not bound.`)},unmounted:(r,e,l,d)=>{if(n.isValidBinding(e)){const i=typeof e.value!="undefined"?e.value:l.props.onClick;n.removeListener(e.arg,e.modifiers,i)}else console.error(`invalid binding. '${e.arg}' was not unbound.`)}}),o.directive("gamepad-vibrate",{beforeMount:(r,e,l,d)=>{if(e.arg!=="undefined"){let i=function(u){(n.options.controllerVibration||n.options.mobileVibration)&&u.vibrationActuator.playEffect("dual-rumble",{startDelay:0,duration:p,weakMagnitude:.1,strongMagnitude:.1})};const p=typeof e.value!="undefined"?e.value:200;n.addListener("gamepad-vibrate:"+e.arg,e.modifiers,i,l)}else console.error(`invalid binding. '${e.arg}' was not bound.`)},unmounted:(r,e,l,d)=>{if(n.isValidBinding(e)){const i=typeof e.value!="undefined"?e.value:l.props.onClick;n.removeListener("gamepad-vibrate:"+e.arg,e.modifiers,i)}else console.error(`invalid binding. '${e.arg}' was not unbound.`)}})}};function F({threshold:o=m.threshold,initialTimeout:a=m.initialTimeout,repeatTimeout:s=m.repeatTimeout,buttonMapping:t=m.buttonMapping}){}const N=$,q=k,R=B,S=C,U=L;var W=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",DefaultOptions:m,default:A,useGamepad:F,onGamepadConnected:N,onGamepadDisconnected:q,onGamepadListUpdated:R,resolveButton:S,vibrateController:U});export{E as G,W as m,S as r,U as v};
